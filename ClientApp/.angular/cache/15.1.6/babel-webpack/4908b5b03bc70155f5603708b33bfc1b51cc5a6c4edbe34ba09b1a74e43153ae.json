{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { HeroesService } from '../shared/services/heroes.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction HeroComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"option\");\n  }\n}\nexport class HeroComponent {\n  constructor() {\n    this.fb = inject(FormBuilder);\n    this.heroesService = inject(HeroesService);\n    this.brands = [{\n      id: 1,\n      name: 'DC'\n    }, {\n      id: 2,\n      name: 'Marvel'\n    }];\n    this.form = this.fb.group({\n      name: ['', Validators.required],\n      alias: ['', Validators.required],\n      brands: ['', Validators.required]\n    });\n  }\n}\nHeroComponent.ɵfac = function HeroComponent_Factory(t) {\n  return new (t || HeroComponent)();\n};\nHeroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HeroComponent,\n  selectors: [[\"app-hero\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\"], [\"for\", \"alias\"], [\"id\", \"alias\", \"type\", \"text\"], [\"for\", \"heroes\"], [\"formControlName\", \"brands\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrack\"]],\n  template: function HeroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function HeroComponent_Template_form_ngSubmit_0_listener($event) {\n        return ctx.heroesService.createHero$.next($event);\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Alias: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Heroes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 6);\n      i0.ɵɵelement(10, \"option\");\n      i0.ɵɵtemplate(11, HeroComponent_option_11_Template, 1, 0, \"option\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"button\");\n      i0.ɵɵtext(14, \"Create\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.brands)(\"ngForTrack\", ctx.by);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,MAAM,QAAQ,eAAe;AACjD,SAASC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AACxD,SAASC,aAAa,QAAQ,mCAAmC;;;;;;ICM7DC,yBAAyD;;;ADE7D,OAAM,MAAOC,aAAa;EAL1BC;IAME,OAAE,GAAGN,MAAM,CAACC,WAAW,CAAC;IACxB,kBAAa,GAAGD,MAAM,CAACG,aAAa,CAAC;IAErC,WAAM,GAAa,CACjB;MAAEI,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAI,CAAE,EACrB;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAQ,CAAE,CAC1B;IAED,SAAI,GAAG,IAAI,CAACC,EAAE,CAACC,KAAK,CAAC;MACnBF,IAAI,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACS,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC;MAChCE,MAAM,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACS,QAAQ;KACjC,CAAC;;;AAbSN,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV1Bd,+BAA6E;MAApDA;QAAA,OAAYe,0CAAsC;MAAA,EAAC;MAC1Ef,gCAAkB;MAAAA,sBAAM;MAAAA,iBAAQ;MAChCA,2BAA+B;MAC/BA,gCAAmB;MAAAA,uBAAO;MAAAA,iBAAQ;MAClCA,2BAAgC;MAChCA,gCAAoB;MAAAA,sBAAM;MAAAA,iBAAQ;MAClCA,iCAAiC;MAC/BA,0BAAiB;MACjBA,sEAAyD;MAC3DA,iBAAS;MACTA,4BAAK;MACKA,uBAAM;MAAAA,iBAAS;;;MAXrBA,oCAAkB;MAQMA,gBAAW;MAAXA,oCAAW","names":["inject","FormBuilder","Validators","HeroesService","i0","HeroComponent","constructor","id","name","fb","group","required","alias","brands","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\work\\complyrights\\HeroTest\\ClientApp\\src\\app\\hero\\hero.component.ts","C:\\work\\complyrights\\HeroTest\\ClientApp\\src\\app\\hero\\hero.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { HeroesService } from '../shared/services/heroes.service';\nimport { Brands } from '../shared/models/brands.model';\n\n@Component({\n  selector: 'app-hero',\n  templateUrl: './hero.component.html',\n  styleUrls: ['./hero.component.css'],\n})\nexport class HeroComponent {\n  fb = inject(FormBuilder);\n  heroesService = inject(HeroesService);\n\n  brands: Brands[] = [\n    { id: 1, name: 'DC' },\n    { id: 2, name: 'Marvel' },\n  ];\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    alias: ['', Validators.required],\n    brands: ['', Validators.required],\n  });\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"heroesService.createHero$.next($event)\">\n  <label for=\"name\">Name: </label>\n  <input id=\"name\" type=\"text\" />\n  <label for=\"alias\">Alias: </label>\n  <input id=\"alias\" type=\"text\" />\n  <label for=\"heroes\">Heroes</label>\n  <select formControlName=\"brands\">\n    <option></option>\n    <option *ngFor=\"let brand of brands; track: by\"></option>\n  </select>\n  <div>\n    <button>Create</button>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}