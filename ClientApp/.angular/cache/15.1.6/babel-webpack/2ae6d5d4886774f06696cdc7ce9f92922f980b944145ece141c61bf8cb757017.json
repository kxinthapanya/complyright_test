{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HeroesService } from '../shared/services/heroes.service';\nimport * as i0 from \"@angular/core\";\nexport class HomeComponent {\n  constructor() {\n    this.heroesService = inject(HeroesService);\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)();\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 34,\n  vars: 0,\n  consts: [[1, \"table\", \"table-hover\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Populate Table With List of Heroes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"Delete Example data and make list dynamic using a angular service file that calls an api on HeroesController to get the heroes from db\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\");\n      i0.ɵɵtext(5, \"Also make the Add Hero link in nav go to a new page with a form that will add a new Hero to Heroes table in db and then redirect back to this page. Do not worry about validating duplicate hero names\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\");\n      i0.ɵɵtext(7, \"The delete button should flag the hero in the db as IsActive = 0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"table\", 0)(9, \"thead\")(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Alias\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Brand\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"tbody\")(22, \"tr\")(23, \"td\");\n      i0.ɵɵtext(24, \"1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"td\");\n      i0.ɵɵtext(26, \"Superman\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"td\");\n      i0.ɵɵtext(28, \"Clark Kent\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"td\");\n      i0.ɵɵtext(30, \"DC\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"td\")(32, \"button\", 1);\n      i0.ɵɵtext(33, \"Delete\");\n      i0.ɵɵelementEnd()()()()();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,MAAM,QAAQ,eAAe;AACjD,SAASC,aAAa,QAAQ,mCAAmC;;AAMjE,OAAM,MAAOC,aAAa;EAJ1BC;IAKE,kBAAa,GAAGH,MAAM,CAACC,aAAa,CAAC;;;AAD1BC,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAE;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP1BC,0BAAI;MAAAA,kDAAkC;MAAAA,iBAAK;MAE3CA,yBAAG;MAAAA,sJAAsI;MAAAA,iBAAI;MAC7IA,yBAAG;MAAAA,sNAAuM;MAAAA,iBAAI;MAC9MA,yBAAG;MAAAA,gFAAgE;MAAAA,iBAAI;MAEvEA,gCAAiC;MAGvBA,mBAAE;MAAAA,iBAAK;MACXA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAGnBA,8BAAO;MAECA,kBAAC;MAAAA,iBAAK;MACVA,2BAAI;MAAAA,yBAAQ;MAAAA,iBAAK;MACjBA,2BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MACnBA,2BAAI;MAAAA,mBAAE;MAAAA,iBAAK;MACXA,2BAAI;MAC2CA,uBAAM;MAAAA,iBAAS","names":["inject","HeroesService","HomeComponent","constructor","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\work\\complyrights\\HeroTest\\ClientApp\\src\\app\\home\\home.component.ts","C:\\work\\complyrights\\HeroTest\\ClientApp\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\r\nimport { HeroesService } from '../shared/services/heroes.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n  heroesService = inject(HeroesService);\r\n}\r\n","<h1>Populate Table With List of Heroes</h1>\r\n\r\n<p>Delete Example data and make list dynamic using a angular service file that calls an api on HeroesController to get the heroes from db</p>\r\n<p>Also make the Add Hero link in nav go to a new page with a form that will add a new Hero to Heroes table in db and then redirect back to this page.  Do not worry about validating duplicate hero names</p>\r\n<p>The delete button should flag the hero in the db as IsActive = 0</p>\r\n\r\n<table class=\"table table-hover\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n      <th>Alias</th>\r\n      <th>Brand</th>\r\n      <th>Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>1</td>\r\n      <td>Superman</td>\r\n      <td>Clark Kent</td>\r\n      <td>DC</td>\r\n      <td>\r\n        <button type=\"button\" class=\"btn btn-danger\">Delete</button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}