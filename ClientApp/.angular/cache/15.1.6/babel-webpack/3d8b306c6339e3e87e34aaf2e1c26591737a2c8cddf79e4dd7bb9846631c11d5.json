{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { Subject, map, switchMap, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class HeroesService {\n  constructor() {\n    this.httpClient = inject(HttpClient);\n    this.updateHeroStatus$ = new Subject();\n    this.heroStatus$ = this.updateHeroStatus$.pipe(tap(hero => console.log('Let update a hero:', hero)), map(hero => ({\n      ...hero,\n      isActive: false\n    })), switchMap(hero => this.httpClient.put('/heroes', hero)));\n    this.heroes$ = this.httpClient.get('/heroes');\n    this.heroes$.pipe(tap(res => console.log('response:', res))).subscribe();\n    this.heroStatus$.subscribe();\n  }\n  disableHero(hero) {\n    console.log('Event', hero);\n  }\n}\nHeroesService.ɵfac = function HeroesService_Factory(t) {\n  return new (t || HeroesService)();\n};\nHeroesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroesService,\n  factory: HeroesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAAqBC,MAAM,QAAQ,eAAe;AAClD,SAASC,OAAO,EAAEC,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAQ,MAAM;;AAMnD,OAAM,MAAOC,aAAa;EAaxBC;IAZA,eAAU,GAAGN,MAAM,CAACD,UAAU,CAAC;IAE/B,sBAAiB,GAAG,IAAIE,OAAO,EAAQ;IAEvC,gBAAW,GAAG,IAAI,CAACM,iBAAiB,CAACC,IAAI,CACvCJ,GAAG,CAAEK,IAAI,IAAKC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,IAAI,CAAC,CAAC,EACtDP,GAAG,CAAEO,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEG,QAAQ,EAAE;IAAK,CAAE,CAAC,CAAC,EAC7CT,SAAS,CAAEM,IAAI,IAAK,IAAI,CAACI,UAAU,CAACC,GAAG,CAAO,SAAS,EAAEL,IAAI,CAAC,CAAC,CAChE;IAED,YAAO,GAAG,IAAI,CAACI,UAAU,CAACE,GAAG,CAAS,SAAS,CAAC;IAG9C,IAAI,CAACC,OAAO,CAACR,IAAI,CAACJ,GAAG,CAAEa,GAAG,IAAKP,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEM,GAAG,CAAC,CAAC,CAAC,CAACC,SAAS,EAAE;IAC1E,IAAI,CAACC,WAAW,CAACD,SAAS,EAAE;EAC9B;EAEAE,WAAW,CAACX,IAAU;IACpBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,IAAI,CAAC;EAC5B;;AApBWJ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAgB,SAAbhB,aAAa;EAAAiB,YAFZ;AAAM","names":["HttpClient","inject","Subject","map","switchMap","tap","HeroesService","constructor","updateHeroStatus$","pipe","hero","console","log","isActive","httpClient","put","get","heroes$","res","subscribe","heroStatus$","disableHero","factory","providedIn"],"sourceRoot":"","sources":["C:\\work\\complyrights\\HeroTest\\ClientApp\\src\\app\\shared\\services\\heroes.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, inject } from '@angular/core';\nimport { Subject, map, switchMap, tap } from 'rxjs';\nimport { Hero } from '../models/hero';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HeroesService {\n  httpClient = inject(HttpClient);\n\n  updateHeroStatus$ = new Subject<Hero>();\n\n  heroStatus$ = this.updateHeroStatus$.pipe(\n    tap((hero) => console.log('Let update a hero:', hero)),\n    map((hero) => ({ ...hero, isActive: false })),\n    switchMap((hero) => this.httpClient.put<Hero>('/heroes', hero))\n  );\n\n  heroes$ = this.httpClient.get<Hero[]>('/heroes');\n\n  constructor() {\n    this.heroes$.pipe(tap((res) => console.log('response:', res))).subscribe();\n    this.heroStatus$.subscribe();\n  }\n\n  disableHero(hero: Hero) {\n    console.log('Event', hero);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}