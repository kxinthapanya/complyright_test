{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { Subject, combineLatest, map, startWith, switchMap, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class HeroesService {\n  constructor() {\n    this.httpClient = inject(HttpClient);\n    this.updateHeroStatus$ = new Subject();\n    this.createHero$ = new Subject();\n    this.heroCreated$ = this.createHero$.pipe(tap(hero => console.log('heroCreated: ', hero)), map(hero => ({\n      name: hero.name,\n      alias: hero.alias,\n      brandId: hero.brands.id,\n      brandName: hero.brands.name\n    }))\n    // switchMap((hero) => this.httpClient.post<AddHero>('/heroes', hero))\n    );\n\n    this.heroStatus$ = this.updateHeroStatus$.pipe(tap(hero => console.log('Let update a hero:', hero)), switchMap(hero => this.httpClient.put(`/heroes/${hero}`, hero)), tap(res => console.log('Updated: ', res)));\n    this.listOfheroes$ = this.httpClient.get('/heroes');\n    this.heroes$ = combineLatest([this.listOfheroes$, this.heroStatus$.pipe(startWith(1))]).pipe(switchMap(() => this.httpClient.get('/heroes')));\n    this.heroes$.pipe(tap(res => console.log('response:', res))).subscribe();\n    this.heroStatus$.subscribe();\n    this.heroCreated$.pipe(tap(hero => console.log('Create Hero: ', hero))).subscribe();\n  }\n  disableHero(hero) {\n    console.log('Event', hero);\n  }\n}\nHeroesService.ɵfac = function HeroesService_Factory(t) {\n  return new (t || HeroesService)();\n};\nHeroesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroesService,\n  factory: HeroesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAAqBC,MAAM,QAAQ,eAAe;AAClD,SAASC,OAAO,EAAEC,aAAa,EAAEC,GAAG,EAAEC,SAAS,EAAEC,SAAS,EAAEC,GAAG,QAAQ,MAAM;;AAM7E,OAAM,MAAOC,aAAa;EA8BxBC;IA7BA,eAAU,GAAGR,MAAM,CAACD,UAAU,CAAC;IAE/B,sBAAiB,GAAG,IAAIE,OAAO,EAAU;IACzC,gBAAW,GAAG,IAAIA,OAAO,EAAW;IAE5B,iBAAY,GAAG,IAAI,CAACQ,WAAW,CAACC,IAAI,CAC1CJ,GAAG,CAAEK,IAAI,IAAKC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,EACjDR,GAAG,CAAEQ,IAAI,KAAM;MACbG,IAAI,EAAEH,IAAI,CAACG,IAAI;MACfC,KAAK,EAAEJ,IAAI,CAACI,KAAK;MACjBC,OAAO,EAAEL,IAAI,CAACM,MAAM,CAACC,EAAE;MACvBC,SAAS,EAAER,IAAI,CAACM,MAAM,CAACH;KACxB,CAAC;IACF;IAAA,CACD;;IAEO,gBAAW,GAAG,IAAI,CAACM,iBAAiB,CAACV,IAAI,CAC/CJ,GAAG,CAAEK,IAAI,IAAKC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,IAAI,CAAC,CAAC,EACtDN,SAAS,CAAEM,IAAI,IAAK,IAAI,CAACU,UAAU,CAACC,GAAG,CAAO,WAAWX,IAAI,EAAE,EAAEA,IAAI,CAAC,CAAC,EACvEL,GAAG,CAAEiB,GAAG,IAAKX,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEU,GAAG,CAAC,CAAC,CAC5C;IAEO,kBAAa,GAAG,IAAI,CAACF,UAAU,CAACG,GAAG,CAAS,SAAS,CAAC;IAE9D,YAAO,GAAGtB,aAAa,CAAC,CACtB,IAAI,CAACuB,aAAa,EAClB,IAAI,CAACC,WAAW,CAAChB,IAAI,CAACN,SAAS,CAAC,CAAC,CAAC,CAAC,CACpC,CAAC,CAACM,IAAI,CAACL,SAAS,CAAC,MAAM,IAAI,CAACgB,UAAU,CAACG,GAAG,CAAS,SAAS,CAAC,CAAC,CAAC;IAG9D,IAAI,CAACG,OAAO,CAACjB,IAAI,CAACJ,GAAG,CAAEiB,GAAG,IAAKX,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEU,GAAG,CAAC,CAAC,CAAC,CAACK,SAAS,EAAE;IAC1E,IAAI,CAACF,WAAW,CAACE,SAAS,EAAE;IAC5B,IAAI,CAACC,YAAY,CACdnB,IAAI,CAACJ,GAAG,CAAEK,IAAI,IAAKC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,CAAC,CACvDiB,SAAS,EAAE;EAChB;EAEAE,WAAW,CAACnB,IAAU;IACpBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,IAAI,CAAC;EAC5B;;AAxCWJ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAwB,SAAbxB,aAAa;EAAAyB,YAFZ;AAAM","names":["HttpClient","inject","Subject","combineLatest","map","startWith","switchMap","tap","HeroesService","constructor","createHero$","pipe","hero","console","log","name","alias","brandId","brands","id","brandName","updateHeroStatus$","httpClient","put","res","get","listOfheroes$","heroStatus$","heroes$","subscribe","heroCreated$","disableHero","factory","providedIn"],"sourceRoot":"","sources":["C:\\work\\complyrights\\HeroTest\\ClientApp\\src\\app\\shared\\services\\heroes.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, inject } from '@angular/core';\nimport { Subject, combineLatest, map, startWith, switchMap, tap } from 'rxjs';\nimport { AddHero, Hero } from '../models/hero.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HeroesService {\n  httpClient = inject(HttpClient);\n\n  updateHeroStatus$ = new Subject<number>();\n  createHero$ = new Subject<AddHero>();\n\n  private heroCreated$ = this.createHero$.pipe(\n    tap((hero) => console.log('heroCreated: ', hero)),\n    map((hero) => ({\n      name: hero.name,\n      alias: hero.alias,\n      brandId: hero.brands.id,\n      brandName: hero.brands.name,\n    }))\n    // switchMap((hero) => this.httpClient.post<AddHero>('/heroes', hero))\n  );\n\n  private heroStatus$ = this.updateHeroStatus$.pipe(\n    tap((hero) => console.log('Let update a hero:', hero)),\n    switchMap((hero) => this.httpClient.put<Hero>(`/heroes/${hero}`, hero)),\n    tap((res) => console.log('Updated: ', res))\n  );\n\n  private listOfheroes$ = this.httpClient.get<Hero[]>('/heroes');\n\n  heroes$ = combineLatest([\n    this.listOfheroes$,\n    this.heroStatus$.pipe(startWith(1)),\n  ]).pipe(switchMap(() => this.httpClient.get<Hero[]>('/heroes')));\n\n  constructor() {\n    this.heroes$.pipe(tap((res) => console.log('response:', res))).subscribe();\n    this.heroStatus$.subscribe();\n    this.heroCreated$\n      .pipe(tap((hero) => console.log('Create Hero: ', hero)))\n      .subscribe();\n  }\n\n  disableHero(hero: Hero) {\n    console.log('Event', hero);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}