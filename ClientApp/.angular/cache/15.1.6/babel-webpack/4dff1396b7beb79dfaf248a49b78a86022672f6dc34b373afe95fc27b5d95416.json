{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HeroesService } from '../shared/services/heroes.service';\nimport { Subject, takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction HomeComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function HomeComponent_tr_22_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const hero_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.heroesService.disableHero(hero_r1));\n    });\n    i0.ɵɵtext(11, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const hero_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(hero_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(hero_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(hero_r1.alias);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(hero_r1.brandName);\n  }\n}\nexport class HomeComponent {\n  constructor() {\n    this.heroesService = inject(HeroesService);\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.heroesService.updateHeroStatus$.pipe(takeUntil(this.destroy$));\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)();\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 24,\n  vars: 3,\n  consts: [[1, \"table\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Populate Table With List of Heroes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \" Delete Example data and make list dynamic using a angular service file that calls an api on HeroesController to get the heroes from db\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\");\n      i0.ɵɵtext(5, \" Also make the Add Hero link in nav go to a new page with a form that will add a new Hero to Heroes table in db and then redirect back to this page. Do not worry about validating duplicate hero names\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\");\n      i0.ɵɵtext(7, \"The delete button should flag the hero in the db as IsActive = 0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"table\", 0)(9, \"thead\")(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Alias\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Brand\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"tbody\");\n      i0.ɵɵtemplate(22, HomeComponent_tr_22_Template, 12, 4, \"tr\", 1);\n      i0.ɵɵpipe(23, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(23, 1, ctx.heroesService.heroes$));\n    }\n  },\n  dependencies: [i1.NgForOf, i1.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA,SAAuCA,MAAM,QAAQ,eAAe;AACpE,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,OAAO,EAAEC,SAAS,QAAQ,MAAM;;;;;;ICsBrCC,0BAAuD;IACjDA,YAAa;IAAAA,iBAAK;IACtBA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;IACxBA,0BAAI;IAAAA,YAAgB;IAAAA,iBAAK;IACzBA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAIAA;MAAA;MAAA;MAAA;MAAA,OAASA,wDAA+B;IAAA,EAAC;IAEzCA,yBACF;IAAAA,iBAAS;;;;IAXPA,eAAa;IAAbA,gCAAa;IACbA,eAAe;IAAfA,kCAAe;IACfA,eAAgB;IAAhBA,mCAAgB;IAChBA,eAAoB;IAApBA,uCAAoB;;;ADpB9B,OAAM,MAAOC,aAAa;EAJ1BC;IAKE,kBAAa,GAAGN,MAAM,CAACC,aAAa,CAAC;IAErC,aAAQ,GAAG,IAAIC,OAAO,EAAW;;EAEjCK,QAAQ;IACN,IAAI,CAACC,aAAa,CAACC,iBAAiB,CAACC,IAAI,CAACP,SAAS,CAAC,IAAI,CAACQ,QAAQ,CAAC,CAAC;EACrE;EAEAC,WAAW;IACT,IAAI,CAACD,QAAQ,CAACE,IAAI,CAAC,IAAI,CAAC;IACxB,IAAI,CAACF,QAAQ,CAACG,WAAW,EAAE;EAC7B;;AAZWT,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR1Bf,0BAAI;MAAAA,kDAAkC;MAAAA,iBAAK;MAE3CA,yBAAG;MACDA,yJAEF;MAAAA,iBAAI;MACJA,yBAAG;MACDA,yNAGF;MAAAA,iBAAI;MACJA,yBAAG;MAAAA,gFAAgE;MAAAA,iBAAI;MAEvEA,gCAAiC;MAGvBA,mBAAE;MAAAA,iBAAK;MACXA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAGnBA,8BAAO;MACLA,+DAcK;;MACPA,iBAAQ;;;MAfeA,gBAAgC;MAAhCA,0EAAgC","names":["inject","HeroesService","Subject","takeUntil","i0","HomeComponent","constructor","ngOnInit","heroesService","updateHeroStatus$","pipe","destroy$","ngOnDestroy","next","unsubscribe","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\work\\complyrights\\HeroTest\\ClientApp\\src\\app\\home\\home.component.ts","C:\\work\\complyrights\\HeroTest\\ClientApp\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { HeroesService } from '../shared/services/heroes.service';\r\nimport { Subject, takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnDestroy, OnInit {\r\n  heroesService = inject(HeroesService);\r\n\r\n  destroy$ = new Subject<boolean>();\r\n\r\n  ngOnInit(): void {\r\n    this.heroesService.updateHeroStatus$.pipe(takeUntil(this.destroy$));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","<h1>Populate Table With List of Heroes</h1>\r\n\r\n<p>\r\n  Delete Example data and make list dynamic using a angular service file that\r\n  calls an api on HeroesController to get the heroes from db\r\n</p>\r\n<p>\r\n  Also make the Add Hero link in nav go to a new page with a form that will add\r\n  a new Hero to Heroes table in db and then redirect back to this page. Do not\r\n  worry about validating duplicate hero names\r\n</p>\r\n<p>The delete button should flag the hero in the db as IsActive = 0</p>\r\n\r\n<table class=\"table table-hover\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n      <th>Alias</th>\r\n      <th>Brand</th>\r\n      <th>Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let hero of heroesService.heroes$ | async\">\r\n      <td>{{ hero.id }}</td>\r\n      <td>{{ hero.name }}</td>\r\n      <td>{{ hero.alias }}</td>\r\n      <td>{{ hero.brandName }}</td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-danger\"\r\n          (click)=\"heroesService.disableHero(hero)\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}